# Rust build artifacts
/target/
**/*.rs.bk
*.pdb

# Cargo
Cargo.lock
# Keep Cargo.lock for applications, remove for libraries
# Cargo.lock

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
*.log
logs/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Rust specific
**/*.rs.bk
*.pdb

# Documentation build
/book/

# Backup files
*.bak
*.backup
*.old

# Test artifacts
test-results/
coverage/

# Local configuration
config.local.toml
config.local.json

# MCP server specific
mcp-server.log
mcp-debug.log

# Binary releases (uncomment if you want to ignore built binaries)
# /dist/
# /release/

# Profiling data
*.prof

# Benchmarking
bench_results/

# Documentation site
/docs/_build/

# Local development
.local/ 